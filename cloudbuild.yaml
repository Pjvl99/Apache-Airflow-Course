# cloudbuild.yaml
options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  # ---- Composer target ----
  _COMPOSER_ENV: curso-airflow
  _LOCATION: us-east1

  # ---- Airflow Variables to set in the environment ----
  _VAR_REPOSITORY: transformacion
  _VAR_PROJECT: melodic-subject-467218-g1
  _VAR_LOCATION: us-east1

  # IMPORTANTE: para Composer 2 normalmente el prefijo incluye /dags
  # Ejemplo: gs://<bucket-id>/dags
  _DAGS_PREFIX_: gs://us-east1-curso-airflow-b7cd9d90-bucket/dags

steps:
  # 1) Sync local /dags folder to the Composer DAGs bucket (deletes removed files)
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: "Sync DAGs to Composer"
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        if [[ ! -d "./dags" ]]; then
          echo "ERROR: ./dags directory not found in repo root." >&2
          exit 1
        fi
        # SustituciÃ³n de Cloud Build => usa UN solo $
        gsutil -m rsync -r -d ./dags "${_DAGS_PREFIX_}"

  # 2) Update Composer environment PyPI packages from requirements.txt
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: "Update PyPI packages from requirements.txt"
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        if [[ ! -f "requirements.txt" ]]; then
          echo "requirements.txt not found in repo root; skipping." >&2
          exit 1
        fi
        # Sustituciones de Cloud Build: un solo $
        gcloud composer environments update "${_COMPOSER_ENV}" \
          --location="${_LOCATION}" \
          --update-pypi-packages-from-file="requirements.txt" || \
        echo "INFO: No changes or update failed (non-critical)."

  # 4) Set Airflow Variables (idempotent)
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    id: "Sync Airflow Variables (Secret Manager)"
    entrypoint: bash
    args:
      - -c
      - |
        SLACK_TOKEN="$(gcloud secrets versions access latest --secret=slack)"

        gcloud composer environments update "curso-airflow" \
        --location us-east1 \
        --update-env-variables=bucket=${_DAGS_PREFIX_},repositorio=${_VAR_REPOSITORY},proyecto=${_VAR_PROJECT},region=${_VAR_LOCATION},slack=$$SLACK_TOKEN || \
        echo "INFO: No new variables added or changed."